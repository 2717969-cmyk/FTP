const express = require('express');
const router = express.Router();
const YooKassa = require('yookassa');
const { v4: uuidv4 } = require('uuid');
const { generateToken } = require('./download'); // –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑ download.js
const { readJSON, writeJSON } = require('../utils'); // ‚ö° –ø–æ–¥–∫–ª—é—á–∞–µ–º

const shopId = process.env.YOOKASSA_SHOP_ID || '1152688';
const secretKey = process.env.YOOKASSA_SECRET || 'test_vXhN6nzVtqVxM4xlqEWPNoi4cK5wQ8Ol3NgFW3ZFrE4';

const yooKassa = new YooKassa({ shopId, secretKey });

// üõ† —Ç—É—Ç –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å "–ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ"
let lastDownloadUrl = null;

// ------------------- –°–û–ó–î–ê–ù–ò–ï –ü–õ–ê–¢–ï–ñ–ê -------------------
router.post('/create-payment', async (req, res) => {
  try {
    const payment = await yooKassa.createPayment({
      amount: { value: '300.00', currency: 'RUB' },
      confirmation: {
        type: 'redirect',
        return_url: `https://ftp-3piv.onrender.com/success.html`
      },
      capture: true,
      description: '–û–ø–ª–∞—Ç–∞ –ø–∞–∫–µ—Ç–∞ —Ñ–∞–π–ª–æ–≤',
    }, uuidv4());

    res.json({ 
      confirmationUrl: payment.confirmation.confirmation_url,
      paymentId: payment.id // üëà —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
    });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞' });
  }
});

// ------------------- –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê -------------------
router.get('/status', async (req, res) => {
  try {
    const { paymentId } = req.query;
    if (!paymentId) {
      return res.status(400).json({ error: '–ù–µ—Ç paymentId' });
    }

    const payment = await yooKassa.getPayment(paymentId);

    res.json({ status: payment.status }); // pending / waiting_for_capture / succeeded / canceled
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞' });
  }
});

// ------------------- WEBHOOK -------------------
router.post('/webhook', express.json(), async (req, res) => {
  try {
    const event = req.body;

    if (event.event === 'payment.succeeded') {
      console.log('‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞:', event.object.id);

      // –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é —Å—Å—ã–ª–∫—É
      const token = generateToken('pack.zip'); // ‚ö° —Ç–≤–æ–π —Ñ–∞–π–ª
      lastDownloadUrl = `/api/download/${token}`;

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ payments.json
      let payments = readJSON('payments.json') || [];
      payments.push({
        id: event.object.id,
        amount: event.object.amount.value,
        currency: event.object.amount.currency,
        status: event.object.status,
        created_at: new Date().toISOString(),
        description: event.object.description,
        downloadUrl: lastDownloadUrl
      });
      writeJSON('payments.json', payments);

      console.log(`üíæ –ü–ª–∞—Ç—ë–∂ ${event.object.id} –∑–∞–ø–∏—Å–∞–Ω –≤ payments.json`);
    }

    res.sendStatus(200);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –≤ webhook:', err);
    res.sendStatus(500);
  }
});

// ------------------- –í–´–î–ê–ß–ê –°–°–´–õ–ö–ò -------------------
router.get('/last-download', (req, res) => {
  if (lastDownloadUrl) {
    res.json({ downloadUrl: lastDownloadUrl });
    // lastDownloadUrl = null; // –º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ
  } else {
    res.json({ status: 'wait' });
  }
});

module.exports = router;